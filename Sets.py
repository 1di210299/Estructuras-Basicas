# -*- coding: utf-8 -*-
"""JuanDiego_Sets.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NrUvEJXrgwcvNam-czguSkY5sFz4G6ws
"""

#JUAN DIEGO GUTIERREZ CORTEZ 20172174

# Commented out IPython magic to ensure Python compatibility.
# %load_ext rpy2.ipython

"""## 1. Creating"""

numeros_pares = {2, 4, 6, 8, 10,12,16,18,20}

# then
numeros_pares

"""Notice that **sets** do not allow duplicates, and show ordering of values.

## 2. Accessing

You can not use indexes in sets.
"""

numeros_pares[4]

#you would need a list:
list(numeros_pares)[5]

"""## 2. Replacing

You would need to rewrite or delete/add an element:
"""

# rewriting
numeros_pares = {2, 4, 6, 8, 10,12,16,18,20}
numeros_pares=set(x**3 for x in numeros_pares)
numeros_pares

frutas = {"manzana", "banana", "cereza"}
frutas.remove('banana')
frutas.add('banana')
frutas

"""## 3. Deleting"""

Paises={'Lima', 'Bogotá', 'Buenos Aires', 'Brasilia', 'Ciudad de México', 'Madrid', 'Lisboa', 'Atenas', 'París', 'Roma'}
Paises.remove('Salamanca') #will not work

Paises={'Lima', 'Bogotá', 'Buenos Aires', 'Brasilia', 'Ciudad de México', 'Madrid', 'Lisboa', 'Atenas', 'París', 'Roma'}
Paises.discard('Bogota')
Paises

Paises={'Lima', 'Bogotá', 'Buenos Aires', 'Brasilia', 'Ciudad de México', 'Madrid', 'Lisboa', 'Atenas', 'París', 'Roma'}
toDelete = [2,40,'b']

# keep what is not in toDelete
Paises.difference_update(toDelete)
Paises

"""Notice the diference for deleting a set:"""

Paises.clear()
Paises #empty the set

"""## 5. Inserting"""

numeros_pares = {2, 4, 6, 8, 10,12,16,18,20}
numeros_pares.update(('Salamanca',))
numeros_pares

numeros_pares = {2, 4, 6, 8, 10,12,16,18,20}
numeros_pares.update(('Salamanca','EEEEE'))
numeros_pares

"""## Other operations

If we have these sets:
"""

Paises={'Lima', 'Bogotá', 'Buenos Aires', 'Brasilia', 'Ciudad de México', 'Madrid', 'Lisboa', 'Atenas', 'París', 'Roma'}
numeros_pares = {2, 4, 6, 8, 10,12,16,18,20}
frutas = {"manzana", "banana", "cereza"}
numeros_impares = {1, 3, 5, 6, 20,9,11,13,17}

"""We could use:"""

# union
Division=numeros_pares|numeros_impares
Division

#intersection
set5=numeros_pares&numeros_impares
set5

# difference:
# set of all the elements to the left that are not present in the right
set6=numeros_pares-numeros_impares
set6

# symmetric difference
# set of elements that are either in the first set or the second set
# but not in both.

set7=numeros_pares^numeros_impares
set7

"""# Sets in R

R does not have a set data structure, but it has _set_ operations for vectors:
"""

# Commented out IPython magic to ensure Python compatibility.
# %%R
# 
# # some vectors
# 
# Pares=c(2, 4, 6, 8, 10,12,16,18,20)
# Paises=c('Lima', 'Bogotá', 'Buenos Aires', 'Brasilia', 'Ciudad de México', 'Madrid', 'Lisboa', 'Atenas', 'París', 'Roma')
# Frutas=c("manzana", "banana", "cereza")
# 
#

# Commented out IPython magic to ensure Python compatibility.
# %%R
# 
# union(Pares,Paises)

# Commented out IPython magic to ensure Python compatibility.
# %%R
# 
# intersect(Paises,Frutas)

# Commented out IPython magic to ensure Python compatibility.
# %%R
# 
# setdiff(Paises,Pares)

# Commented out IPython magic to ensure Python compatibility.
# %%R
# 
# #simmetric difference
# setdiff(union(Paises,Pares),intersect(Paises,Pares))

"""Notice set operations in R:"""

# Commented out IPython magic to ensure Python compatibility.
# %%R
# 
# set1R=c('a','b','c','d','d') #not a set
# set2R=c(1,2,3,4,4)#not a set
# union(set1R,set2R) #result is a set